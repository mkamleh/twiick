{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { Capacitor, Plugins } from '@capacitor/core';\nimport { MapModalComponent } from '../map-modal/map-modal.component';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/menu-service.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\n\nfunction LocationPickerComponent_ion_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 4);\n  }\n}\n\nfunction LocationPickerComponent_ion_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-img\", 5);\n    i0.ɵɵlistener(\"click\", function LocationPickerComponent_ion_img_2_Template_ion_img_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onPickLocation();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.selectedLocationImage);\n  }\n}\n\nfunction LocationPickerComponent_ion_button_3_ion_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-label\");\n    i0.ɵɵtext(1, \"Select Location\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LocationPickerComponent_ion_button_3_ion_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-label\");\n    i0.ɵɵtext(1, \"\\u062A\\u062D\\u062F\\u064A\\u062F \\u0627\\u0644\\u0639\\u0646\\u0648\\u0627\\u0646\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LocationPickerComponent_ion_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 6);\n    i0.ɵɵlistener(\"click\", function LocationPickerComponent_ion_button_3_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onPickLocation();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 7);\n    i0.ɵɵtemplate(2, LocationPickerComponent_ion_button_3_ion_label_2_Template, 2, 0, \"ion-label\", 8);\n    i0.ɵɵtemplate(3, LocationPickerComponent_ion_button_3_ion_label_3_Template, 2, 0, \"ion-label\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.languge);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.languge);\n  }\n}\n\nexport let LocationPickerComponent = /*#__PURE__*/(() => {\n  class LocationPickerComponent {\n    constructor(menuService, actionSheetCtrl, modalCtrl, alertCtrl, http) {\n      this.menuService = menuService;\n      this.actionSheetCtrl = actionSheetCtrl;\n      this.modalCtrl = modalCtrl;\n      this.alertCtrl = alertCtrl;\n      this.http = http;\n      this.locationPick = new EventEmitter();\n      this.openMenu = true;\n      this.isLoading = false;\n      this.locationAvailable = false;\n      this.sub = this.menuService.getLangugue().subscribe(data => {\n        this.languge = data;\n      });\n    }\n\n    ngOnInit() {}\n\n    onPickLocation() {\n      if (this.openMenu) {\n        if (!this.languge) {\n          this.actionSheetCtrl.create({\n            header: 'Please Choose',\n            buttons: [{\n              text: 'Auto-Locate',\n              handler: () => {\n                this.locateUser();\n              }\n            }, {\n              text: 'Pick on Map',\n              handler: () => {\n                this.openMap();\n              }\n            }, {\n              text: 'Cancel',\n              role: 'cancel'\n            }]\n          }).then(actionSheetEl => {\n            actionSheetEl.present();\n          });\n        } else {\n          this.actionSheetCtrl.create({\n            header: 'الرجاء الاختيار',\n            cssClass: 'my-custom-class',\n            buttons: [{\n              text: 'تحديد تلقائي',\n              handler: () => {\n                this.locateUser();\n              }\n            }, {\n              text: 'الاختيار على الخريطة',\n              handler: () => {\n                this.openMap();\n              }\n            }, {\n              text: 'الغاء',\n              role: 'الغاء'\n            }]\n          }).then(actionSheetEl => {\n            actionSheetEl.present();\n          });\n        }\n      }\n    } // onPickLocation(){\n    //   this.modalCtrl.create({component:MapModalComponent}).then(modelEl => {\n    //     modelEl.onDidDismiss().then(modalData => {\n    //       if (!modalData.data) {\n    //         console.log(null);\n    //       }\n    //       const coordinates: Coordinatess = {\n    //         lat: modalData.data.lat,\n    //         lng: modalData.data.lng\n    //       };\n    //       this.createPlace(coordinates.lat, coordinates.lng);\n    //   });\n    //   modelEl.present();\n    // });\n    // }\n\n\n    locateUser() {\n      if (!Capacitor.isPluginAvailable('Geolocation')) {\n        this.showErrorAlert();\n        return;\n      }\n\n      this.isLoading = true;\n      Plugins.Geolocation.getCurrentPosition({\n        enableHighAccuracy: true,\n        timeout: 800000,\n        maximumAge: 0\n      }).then(geoPosition => {\n        //console.log(geoPosition.coords.accuracy);\n        const coordinates = {\n          lat: geoPosition.coords.latitude,\n          lng: geoPosition.coords.longitude\n        }; //console.log(coordinates.lat, coordinates.lng);\n\n        if (coordinates.lat > 31.945872 && coordinates.lat < 32.004211 && coordinates.lng > 35.828305 && coordinates.lng < 35.897796) {\n          //console.log(\"included\");\n          this.createPlace(coordinates.lat, coordinates.lng);\n        } else {\n          //console.log(\"out of location\");\n          this.showAlert();\n        }\n\n        this.isLoading = false;\n      }).catch(err => {\n        this.isLoading = false;\n        this.showErrorAlert();\n      });\n    }\n\n    showErrorAlert() {\n      this.alertCtrl.create({\n        header: 'Could not fetch location',\n        message: 'Please use the map to pick a location!',\n        buttons: ['Okay']\n      }).then(alertEl => alertEl.present());\n    }\n\n    showAlert() {\n      if (this.languge) {\n        this.alertCtrl.create({\n          header: 'فشل في اختيار الموقع',\n          message: \"عنوان التوصيل خارج نطاق التوصيل. مناطق التوصيل حاليا هي  خلدا الرابية الجاردنز الصويفية الدوار الرابع لدوار السابع الشميساني عبدون ام اذينة \",\n          buttons: ['تم']\n        }).then(alert => alert.present());\n      } else {\n        this.alertCtrl.create({\n          header: 'Location Error',\n          message: \"Location selected is out of our delivery zone. We  currently only deliver to Khalda, Rabieh, Gardens, Swaifyeh, Abdoun, Um Uthaniah, Shemishani, Fourth Circle to Seventh Circle\",\n          buttons: ['Okey']\n        }).then(alert => alert.present());\n      }\n    }\n\n    openMap() {\n      this.modalCtrl.create({\n        component: MapModalComponent\n      }).then(modalEl => {\n        modalEl.onDidDismiss().then(modalData => {\n          if (!modalData.data) {\n            return;\n          }\n\n          const coordinates = {\n            lat: modalData.data.lat,\n            lng: modalData.data.lng\n          }; //console.log(coordinates);\n\n          if (coordinates.lat > 31.945872 && coordinates.lat < 32.004211 && coordinates.lng > 35.828305 && coordinates.lng < 35.897796) {\n            //console.log(\"included\");\n            this.createPlace(coordinates.lat, coordinates.lng);\n          } else {\n            //console.log(\"out of location\");\n            this.showAlert();\n          }\n        });\n        modalEl.present();\n      });\n    }\n\n    createPlace(lat, lng) {\n      this.locationAvailable = true;\n      const pickedLocation = {\n        lat: lat,\n        lng: lng,\n        address: null,\n        staticMapImageUrl: null\n      };\n      this.isLoading = true;\n      this.getAddress(lat, lng).pipe(switchMap(address => {\n        pickedLocation.address = address;\n        return of(this.getMapImage(pickedLocation.lat, pickedLocation.lng, 14));\n      })).subscribe(staticMapImageUrl => {\n        pickedLocation.staticMapImageUrl = staticMapImageUrl;\n        this.selectedLocationImage = staticMapImageUrl;\n        this.isLoading = false;\n        this.locationPick.emit(pickedLocation);\n      });\n    }\n\n    getAddress(lat, lng) {\n      return this.http.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${environment.googleMapsAPIKey}`).pipe(map(geoData => {\n        if (!geoData || !geoData.results || geoData.results.length === 0) {\n          return null;\n        }\n\n        return geoData.results[0].formatted_address;\n      }));\n    }\n\n    getMapImage(lat, lng, zoom) {\n      return `https://maps.googleapis.com/maps/api/staticmap?center=${lat},${lng}&zoom=${zoom}&size=500x300&maptype=roadmap\n        &markers=color:red%7Clabel:Place%7C${lat},${lng}\n        &key=${environment.googleMapsAPIKey}`;\n    }\n\n  }\n\n  LocationPickerComponent.ɵfac = function LocationPickerComponent_Factory(t) {\n    return new (t || LocationPickerComponent)(i0.ɵɵdirectiveInject(i1.MenuServiceService), i0.ɵɵdirectiveInject(i2.ActionSheetController), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  LocationPickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LocationPickerComponent,\n    selectors: [[\"app-location-picker\"]],\n    inputs: {\n      selectedLocationImage: \"selectedLocationImage\",\n      openMenu: \"openMenu\"\n    },\n    outputs: {\n      locationPick: \"locationPick\"\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[1, \"picker\"], [\"color\", \"primary\", 4, \"ngIf\"], [\"role\", \"button\", \"class\", \"location-image\", 3, \"src\", \"click\", 4, \"ngIf\"], [\"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"color\", \"primary\"], [\"role\", \"button\", 1, \"location-image\", 3, \"src\", \"click\"], [\"color\", \"primary\", 3, \"click\"], [\"name\", \"map\", \"slot\", \"start\"], [4, \"ngIf\"]],\n    template: function LocationPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, LocationPickerComponent_ion_spinner_1_Template, 1, 0, \"ion-spinner\", 1);\n        i0.ɵɵtemplate(2, LocationPickerComponent_ion_img_2_Template, 1, 1, \"ion-img\", 2);\n        i0.ɵɵtemplate(3, LocationPickerComponent_ion_button_3_Template, 4, 2, \"ion-button\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedLocationImage && !ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.selectedLocationImage && !ctx.isLoading);\n      }\n    },\n    directives: [i4.NgIf, i2.IonSpinner, i2.IonImg, i2.IonButton, i2.IonIcon, i2.IonLabel],\n    styles: [\".picker[_ngcontent-%COMP%]{width:30rem;max-width:80%;height:20rem;max-height:30vh;border:1px solid var(--ion-color-primary);margin:auto;display:flex;justify-content:center;align-items:center}.location-image[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:cover}\"]\n  });\n  return LocationPickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}